// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: home/paolo/uni/dissertation/dmat/proto/MatrixPieceTripletsInt32Wire.proto

package it.unipr.aotlab.dmat.core.generated;

public final class MatrixPieceTripletsInt32Wire {
  private MatrixPieceTripletsInt32Wire() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TripletOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 row = 1;
    boolean hasRow();
    int getRow();
    
    // required int32 col = 2;
    boolean hasCol();
    int getCol();
    
    // required sint32 value = 3;
    boolean hasValue();
    int getValue();
  }
  public static final class Triplet extends
      com.google.protobuf.GeneratedMessage
      implements TripletOrBuilder {
    // Use Triplet.newBuilder() to construct.
    private Triplet(Builder builder) {
      super(builder);
    }
    private Triplet(boolean noInit) {}
    
    private static final Triplet defaultInstance;
    public static Triplet getDefaultInstance() {
      return defaultInstance;
    }
    
    public Triplet getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.internal_static_Triplet_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.internal_static_Triplet_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 row = 1;
    public static final int ROW_FIELD_NUMBER = 1;
    private int row_;
    public boolean hasRow() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getRow() {
      return row_;
    }
    
    // required int32 col = 2;
    public static final int COL_FIELD_NUMBER = 2;
    private int col_;
    public boolean hasCol() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getCol() {
      return col_;
    }
    
    // required sint32 value = 3;
    public static final int VALUE_FIELD_NUMBER = 3;
    private int value_;
    public boolean hasValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getValue() {
      return value_;
    }
    
    private void initFields() {
      row_ = 0;
      col_ = 0;
      value_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasRow()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCol()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, row_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, col_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, value_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, row_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, col_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.TripletOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.internal_static_Triplet_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.internal_static_Triplet_fieldAccessorTable;
      }
      
      // Construct using it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        row_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        col_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet.getDescriptor();
      }
      
      public it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet getDefaultInstanceForType() {
        return it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet.getDefaultInstance();
      }
      
      public it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet build() {
        it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet buildPartial() {
        it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet result = new it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.row_ = row_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.col_ = col_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet) {
          return mergeFrom((it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet other) {
        if (other == it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet.getDefaultInstance()) return this;
        if (other.hasRow()) {
          setRow(other.getRow());
        }
        if (other.hasCol()) {
          setCol(other.getCol());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasRow()) {
          
          return false;
        }
        if (!hasCol()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              row_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              col_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              value_ = input.readSInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 row = 1;
      private int row_ ;
      public boolean hasRow() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getRow() {
        return row_;
      }
      public Builder setRow(int value) {
        bitField0_ |= 0x00000001;
        row_ = value;
        onChanged();
        return this;
      }
      public Builder clearRow() {
        bitField0_ = (bitField0_ & ~0x00000001);
        row_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 col = 2;
      private int col_ ;
      public boolean hasCol() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getCol() {
        return col_;
      }
      public Builder setCol(int value) {
        bitField0_ |= 0x00000002;
        col_ = value;
        onChanged();
        return this;
      }
      public Builder clearCol() {
        bitField0_ = (bitField0_ & ~0x00000002);
        col_ = 0;
        onChanged();
        return this;
      }
      
      // required sint32 value = 3;
      private int value_ ;
      public boolean hasValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getValue() {
        return value_;
      }
      public Builder setValue(int value) {
        bitField0_ |= 0x00000004;
        value_ = value;
        onChanged();
        return this;
      }
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        value_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Triplet)
    }
    
    static {
      defaultInstance = new Triplet(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Triplet)
  }
  
  public interface MatrixPieceTripletsInt32BodyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required bool update = 1;
    boolean hasUpdate();
    boolean getUpdate();
    
    // required string matrixId = 2;
    boolean hasMatrixId();
    String getMatrixId();
    
    // required string chunkId = 3;
    boolean hasChunkId();
    String getChunkId();
    
    // required string nodeId = 4;
    boolean hasNodeId();
    String getNodeId();
    
    // required .RectangleBody position = 5;
    boolean hasPosition();
    it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody getPosition();
    it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBodyOrBuilder getPositionOrBuilder();
    
    // repeated .Triplet values = 6;
    java.util.List<it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet> 
        getValuesList();
    it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet getValues(int index);
    int getValuesCount();
    java.util.List<? extends it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.TripletOrBuilder> 
        getValuesOrBuilderList();
    it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.TripletOrBuilder getValuesOrBuilder(
        int index);
  }
  public static final class MatrixPieceTripletsInt32Body extends
      com.google.protobuf.GeneratedMessage
      implements MatrixPieceTripletsInt32BodyOrBuilder {
    // Use MatrixPieceTripletsInt32Body.newBuilder() to construct.
    private MatrixPieceTripletsInt32Body(Builder builder) {
      super(builder);
    }
    private MatrixPieceTripletsInt32Body(boolean noInit) {}
    
    private static final MatrixPieceTripletsInt32Body defaultInstance;
    public static MatrixPieceTripletsInt32Body getDefaultInstance() {
      return defaultInstance;
    }
    
    public MatrixPieceTripletsInt32Body getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.internal_static_MatrixPieceTripletsInt32Body_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.internal_static_MatrixPieceTripletsInt32Body_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required bool update = 1;
    public static final int UPDATE_FIELD_NUMBER = 1;
    private boolean update_;
    public boolean hasUpdate() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public boolean getUpdate() {
      return update_;
    }
    
    // required string matrixId = 2;
    public static final int MATRIXID_FIELD_NUMBER = 2;
    private java.lang.Object matrixId_;
    public boolean hasMatrixId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getMatrixId() {
      java.lang.Object ref = matrixId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          matrixId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMatrixIdBytes() {
      java.lang.Object ref = matrixId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        matrixId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string chunkId = 3;
    public static final int CHUNKID_FIELD_NUMBER = 3;
    private java.lang.Object chunkId_;
    public boolean hasChunkId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getChunkId() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          chunkId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getChunkIdBytes() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        chunkId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string nodeId = 4;
    public static final int NODEID_FIELD_NUMBER = 4;
    private java.lang.Object nodeId_;
    public boolean hasNodeId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getNodeId() {
      java.lang.Object ref = nodeId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          nodeId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNodeIdBytes() {
      java.lang.Object ref = nodeId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        nodeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required .RectangleBody position = 5;
    public static final int POSITION_FIELD_NUMBER = 5;
    private it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody position_;
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody getPosition() {
      return position_;
    }
    public it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBodyOrBuilder getPositionOrBuilder() {
      return position_;
    }
    
    // repeated .Triplet values = 6;
    public static final int VALUES_FIELD_NUMBER = 6;
    private java.util.List<it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet> values_;
    public java.util.List<it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet> getValuesList() {
      return values_;
    }
    public java.util.List<? extends it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.TripletOrBuilder> 
        getValuesOrBuilderList() {
      return values_;
    }
    public int getValuesCount() {
      return values_.size();
    }
    public it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet getValues(int index) {
      return values_.get(index);
    }
    public it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.TripletOrBuilder getValuesOrBuilder(
        int index) {
      return values_.get(index);
    }
    
    private void initFields() {
      update_ = false;
      matrixId_ = "";
      chunkId_ = "";
      nodeId_ = "";
      position_ = it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.getDefaultInstance();
      values_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasUpdate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMatrixId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChunkId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNodeId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPosition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPosition().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getValuesCount(); i++) {
        if (!getValues(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, update_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMatrixIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getChunkIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getNodeIdBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, position_);
      }
      for (int i = 0; i < values_.size(); i++) {
        output.writeMessage(6, values_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, update_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMatrixIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getChunkIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getNodeIdBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, position_);
      }
      for (int i = 0; i < values_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, values_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32BodyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.internal_static_MatrixPieceTripletsInt32Body_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.internal_static_MatrixPieceTripletsInt32Body_fieldAccessorTable;
      }
      
      // Construct using it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPositionFieldBuilder();
          getValuesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        update_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        matrixId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        chunkId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        nodeId_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        if (positionBuilder_ == null) {
          position_ = it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.getDefaultInstance();
        } else {
          positionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (valuesBuilder_ == null) {
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          valuesBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body.getDescriptor();
      }
      
      public it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body getDefaultInstanceForType() {
        return it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body.getDefaultInstance();
      }
      
      public it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body build() {
        it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body buildPartial() {
        it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body result = new it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.update_ = update_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.matrixId_ = matrixId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.chunkId_ = chunkId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.nodeId_ = nodeId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (positionBuilder_ == null) {
          result.position_ = position_;
        } else {
          result.position_ = positionBuilder_.build();
        }
        if (valuesBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            values_ = java.util.Collections.unmodifiableList(values_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.values_ = values_;
        } else {
          result.values_ = valuesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body) {
          return mergeFrom((it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body other) {
        if (other == it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body.getDefaultInstance()) return this;
        if (other.hasUpdate()) {
          setUpdate(other.getUpdate());
        }
        if (other.hasMatrixId()) {
          setMatrixId(other.getMatrixId());
        }
        if (other.hasChunkId()) {
          setChunkId(other.getChunkId());
        }
        if (other.hasNodeId()) {
          setNodeId(other.getNodeId());
        }
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        if (valuesBuilder_ == null) {
          if (!other.values_.isEmpty()) {
            if (values_.isEmpty()) {
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureValuesIsMutable();
              values_.addAll(other.values_);
            }
            onChanged();
          }
        } else {
          if (!other.values_.isEmpty()) {
            if (valuesBuilder_.isEmpty()) {
              valuesBuilder_.dispose();
              valuesBuilder_ = null;
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000020);
              valuesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValuesFieldBuilder() : null;
            } else {
              valuesBuilder_.addAllMessages(other.values_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasUpdate()) {
          
          return false;
        }
        if (!hasMatrixId()) {
          
          return false;
        }
        if (!hasChunkId()) {
          
          return false;
        }
        if (!hasNodeId()) {
          
          return false;
        }
        if (!hasPosition()) {
          
          return false;
        }
        if (!getPosition().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getValuesCount(); i++) {
          if (!getValues(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              update_ = input.readBool();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              matrixId_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              chunkId_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              nodeId_ = input.readBytes();
              break;
            }
            case 42: {
              it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.Builder subBuilder = it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.newBuilder();
              if (hasPosition()) {
                subBuilder.mergeFrom(getPosition());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPosition(subBuilder.buildPartial());
              break;
            }
            case 50: {
              it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet.Builder subBuilder = it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addValues(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required bool update = 1;
      private boolean update_ ;
      public boolean hasUpdate() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getUpdate() {
        return update_;
      }
      public Builder setUpdate(boolean value) {
        bitField0_ |= 0x00000001;
        update_ = value;
        onChanged();
        return this;
      }
      public Builder clearUpdate() {
        bitField0_ = (bitField0_ & ~0x00000001);
        update_ = false;
        onChanged();
        return this;
      }
      
      // required string matrixId = 2;
      private java.lang.Object matrixId_ = "";
      public boolean hasMatrixId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getMatrixId() {
        java.lang.Object ref = matrixId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          matrixId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMatrixId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        matrixId_ = value;
        onChanged();
        return this;
      }
      public Builder clearMatrixId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        matrixId_ = getDefaultInstance().getMatrixId();
        onChanged();
        return this;
      }
      void setMatrixId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        matrixId_ = value;
        onChanged();
      }
      
      // required string chunkId = 3;
      private java.lang.Object chunkId_ = "";
      public boolean hasChunkId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getChunkId() {
        java.lang.Object ref = chunkId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          chunkId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setChunkId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        chunkId_ = value;
        onChanged();
        return this;
      }
      public Builder clearChunkId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        chunkId_ = getDefaultInstance().getChunkId();
        onChanged();
        return this;
      }
      void setChunkId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        chunkId_ = value;
        onChanged();
      }
      
      // required string nodeId = 4;
      private java.lang.Object nodeId_ = "";
      public boolean hasNodeId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getNodeId() {
        java.lang.Object ref = nodeId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          nodeId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNodeId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        nodeId_ = value;
        onChanged();
        return this;
      }
      public Builder clearNodeId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        nodeId_ = getDefaultInstance().getNodeId();
        onChanged();
        return this;
      }
      void setNodeId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        nodeId_ = value;
        onChanged();
      }
      
      // required .RectangleBody position = 5;
      private it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody position_ = it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody, it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.Builder, it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBodyOrBuilder> positionBuilder_;
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody getPosition() {
        if (positionBuilder_ == null) {
          return position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }
      public Builder setPosition(it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
          onChanged();
        } else {
          positionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setPosition(
          it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
          onChanged();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergePosition(it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody value) {
        if (positionBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              position_ != it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.getDefaultInstance()) {
            position_ =
              it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.newBuilder(position_).mergeFrom(value).buildPartial();
          } else {
            position_ = value;
          }
          onChanged();
        } else {
          positionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearPosition() {
        if (positionBuilder_ == null) {
          position_ = it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.getDefaultInstance();
          onChanged();
        } else {
          positionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      public it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.Builder getPositionBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }
      public it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBodyOrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody, it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.Builder, it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBodyOrBuilder> 
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody, it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.Builder, it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBodyOrBuilder>(
                  position_,
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }
      
      // repeated .Triplet values = 6;
      private java.util.List<it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet> values_ =
        java.util.Collections.emptyList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          values_ = new java.util.ArrayList<it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet>(values_);
          bitField0_ |= 0x00000020;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet, it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet.Builder, it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.TripletOrBuilder> valuesBuilder_;
      
      public java.util.List<it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet> getValuesList() {
        if (valuesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(values_);
        } else {
          return valuesBuilder_.getMessageList();
        }
      }
      public int getValuesCount() {
        if (valuesBuilder_ == null) {
          return values_.size();
        } else {
          return valuesBuilder_.getCount();
        }
      }
      public it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet getValues(int index) {
        if (valuesBuilder_ == null) {
          return values_.get(index);
        } else {
          return valuesBuilder_.getMessage(index);
        }
      }
      public Builder setValues(
          int index, it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.set(index, value);
          onChanged();
        } else {
          valuesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setValues(
          int index, it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.set(index, builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addValues(it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.add(value);
          onChanged();
        } else {
          valuesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addValues(
          int index, it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.add(index, value);
          onChanged();
        } else {
          valuesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addValues(
          it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.add(builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addValues(
          int index, it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.add(index, builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllValues(
          java.lang.Iterable<? extends it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet> values) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          super.addAll(values, values_);
          onChanged();
        } else {
          valuesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearValues() {
        if (valuesBuilder_ == null) {
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          valuesBuilder_.clear();
        }
        return this;
      }
      public Builder removeValues(int index) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.remove(index);
          onChanged();
        } else {
          valuesBuilder_.remove(index);
        }
        return this;
      }
      public it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet.Builder getValuesBuilder(
          int index) {
        return getValuesFieldBuilder().getBuilder(index);
      }
      public it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.TripletOrBuilder getValuesOrBuilder(
          int index) {
        if (valuesBuilder_ == null) {
          return values_.get(index);  } else {
          return valuesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.TripletOrBuilder> 
           getValuesOrBuilderList() {
        if (valuesBuilder_ != null) {
          return valuesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(values_);
        }
      }
      public it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet.Builder addValuesBuilder() {
        return getValuesFieldBuilder().addBuilder(
            it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet.getDefaultInstance());
      }
      public it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet.Builder addValuesBuilder(
          int index) {
        return getValuesFieldBuilder().addBuilder(
            index, it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet.getDefaultInstance());
      }
      public java.util.List<it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet.Builder> 
           getValuesBuilderList() {
        return getValuesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet, it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet.Builder, it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.TripletOrBuilder> 
          getValuesFieldBuilder() {
        if (valuesBuilder_ == null) {
          valuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet, it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet.Builder, it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.TripletOrBuilder>(
                  values_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          values_ = null;
        }
        return valuesBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:MatrixPieceTripletsInt32Body)
    }
    
    static {
      defaultInstance = new MatrixPieceTripletsInt32Body(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MatrixPieceTripletsInt32Body)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Triplet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Triplet_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MatrixPieceTripletsInt32Body_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MatrixPieceTripletsInt32Body_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nIhome/paolo/uni/dissertation/dmat/proto" +
      "/MatrixPieceTripletsInt32Wire.proto\032\032Chu" +
      "nkDescriptionWire.proto\032\023RectangleWire.p" +
      "roto\"2\n\007Triplet\022\013\n\003row\030\001 \002(\005\022\013\n\003col\030\002 \002(" +
      "\005\022\r\n\005value\030\003 \002(\021\"\235\001\n\034MatrixPieceTriplets" +
      "Int32Body\022\016\n\006update\030\001 \002(\010\022\020\n\010matrixId\030\002 " +
      "\002(\t\022\017\n\007chunkId\030\003 \002(\t\022\016\n\006nodeId\030\004 \002(\t\022 \n\010" +
      "position\030\005 \002(\0132\016.RectangleBody\022\030\n\006values" +
      "\030\006 \003(\0132\010.TripletB%\n#it.unipr.aotlab.dmat" +
      ".core.generated"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_Triplet_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_Triplet_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Triplet_descriptor,
              new java.lang.String[] { "Row", "Col", "Value", },
              it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet.class,
              it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.Triplet.Builder.class);
          internal_static_MatrixPieceTripletsInt32Body_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_MatrixPieceTripletsInt32Body_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MatrixPieceTripletsInt32Body_descriptor,
              new java.lang.String[] { "Update", "MatrixId", "ChunkId", "NodeId", "Position", "Values", },
              it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body.class,
              it.unipr.aotlab.dmat.core.generated.MatrixPieceTripletsInt32Wire.MatrixPieceTripletsInt32Body.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          it.unipr.aotlab.dmat.core.generated.ChunkDescriptionWire.getDescriptor(),
          it.unipr.aotlab.dmat.core.generated.RectangleWire.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
