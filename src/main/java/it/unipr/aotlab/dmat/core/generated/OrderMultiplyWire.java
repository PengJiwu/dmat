// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: home/paolo/uni/dissertation/dmat/proto/OrderMultiplyWire.proto

package it.unipr.aotlab.dmat.core.generated;

public final class OrderMultiplyWire {
  private OrderMultiplyWire() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface OrderMultiplyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string outputMatrixId = 1;
    boolean hasOutputMatrixId();
    String getOutputMatrixId();
    
    // required string firstFactorMatrixId = 2;
    boolean hasFirstFactorMatrixId();
    String getFirstFactorMatrixId();
    
    // required string secondFactorMatrixId = 3;
    boolean hasSecondFactorMatrixId();
    String getSecondFactorMatrixId();
    
    // required .RectangleBody outputPiece = 4;
    boolean hasOutputPiece();
    it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody getOutputPiece();
    it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBodyOrBuilder getOutputPieceOrBuilder();
    
    // required .TypeBody type = 5;
    boolean hasType();
    it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody getType();
    it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBodyOrBuilder getTypeOrBuilder();
  }
  public static final class OrderMultiply extends
      com.google.protobuf.GeneratedMessage
      implements OrderMultiplyOrBuilder {
    // Use OrderMultiply.newBuilder() to construct.
    private OrderMultiply(Builder builder) {
      super(builder);
    }
    private OrderMultiply(boolean noInit) {}
    
    private static final OrderMultiply defaultInstance;
    public static OrderMultiply getDefaultInstance() {
      return defaultInstance;
    }
    
    public OrderMultiply getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.internal_static_OrderMultiply_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.internal_static_OrderMultiply_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string outputMatrixId = 1;
    public static final int OUTPUTMATRIXID_FIELD_NUMBER = 1;
    private java.lang.Object outputMatrixId_;
    public boolean hasOutputMatrixId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getOutputMatrixId() {
      java.lang.Object ref = outputMatrixId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          outputMatrixId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getOutputMatrixIdBytes() {
      java.lang.Object ref = outputMatrixId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        outputMatrixId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string firstFactorMatrixId = 2;
    public static final int FIRSTFACTORMATRIXID_FIELD_NUMBER = 2;
    private java.lang.Object firstFactorMatrixId_;
    public boolean hasFirstFactorMatrixId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getFirstFactorMatrixId() {
      java.lang.Object ref = firstFactorMatrixId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          firstFactorMatrixId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getFirstFactorMatrixIdBytes() {
      java.lang.Object ref = firstFactorMatrixId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        firstFactorMatrixId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string secondFactorMatrixId = 3;
    public static final int SECONDFACTORMATRIXID_FIELD_NUMBER = 3;
    private java.lang.Object secondFactorMatrixId_;
    public boolean hasSecondFactorMatrixId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getSecondFactorMatrixId() {
      java.lang.Object ref = secondFactorMatrixId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          secondFactorMatrixId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSecondFactorMatrixIdBytes() {
      java.lang.Object ref = secondFactorMatrixId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        secondFactorMatrixId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required .RectangleBody outputPiece = 4;
    public static final int OUTPUTPIECE_FIELD_NUMBER = 4;
    private it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody outputPiece_;
    public boolean hasOutputPiece() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody getOutputPiece() {
      return outputPiece_;
    }
    public it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBodyOrBuilder getOutputPieceOrBuilder() {
      return outputPiece_;
    }
    
    // required .TypeBody type = 5;
    public static final int TYPE_FIELD_NUMBER = 5;
    private it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody getType() {
      return type_;
    }
    public it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBodyOrBuilder getTypeOrBuilder() {
      return type_;
    }
    
    private void initFields() {
      outputMatrixId_ = "";
      firstFactorMatrixId_ = "";
      secondFactorMatrixId_ = "";
      outputPiece_ = it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.getDefaultInstance();
      type_ = it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasOutputMatrixId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFirstFactorMatrixId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSecondFactorMatrixId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOutputPiece()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getOutputPiece().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getType().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getOutputMatrixIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getFirstFactorMatrixIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSecondFactorMatrixIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, outputPiece_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, type_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getOutputMatrixIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getFirstFactorMatrixIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSecondFactorMatrixIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, outputPiece_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.internal_static_OrderMultiply_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.internal_static_OrderMultiply_fieldAccessorTable;
      }
      
      // Construct using it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOutputPieceFieldBuilder();
          getTypeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        outputMatrixId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        firstFactorMatrixId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        secondFactorMatrixId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (outputPieceBuilder_ == null) {
          outputPiece_ = it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.getDefaultInstance();
        } else {
          outputPieceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (typeBuilder_ == null) {
          type_ = it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody.getDefaultInstance();
        } else {
          typeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply.getDescriptor();
      }
      
      public it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply getDefaultInstanceForType() {
        return it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply.getDefaultInstance();
      }
      
      public it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply build() {
        it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply buildPartial() {
        it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply result = new it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.outputMatrixId_ = outputMatrixId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.firstFactorMatrixId_ = firstFactorMatrixId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.secondFactorMatrixId_ = secondFactorMatrixId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (outputPieceBuilder_ == null) {
          result.outputPiece_ = outputPiece_;
        } else {
          result.outputPiece_ = outputPieceBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (typeBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = typeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply) {
          return mergeFrom((it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply other) {
        if (other == it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply.getDefaultInstance()) return this;
        if (other.hasOutputMatrixId()) {
          setOutputMatrixId(other.getOutputMatrixId());
        }
        if (other.hasFirstFactorMatrixId()) {
          setFirstFactorMatrixId(other.getFirstFactorMatrixId());
        }
        if (other.hasSecondFactorMatrixId()) {
          setSecondFactorMatrixId(other.getSecondFactorMatrixId());
        }
        if (other.hasOutputPiece()) {
          mergeOutputPiece(other.getOutputPiece());
        }
        if (other.hasType()) {
          mergeType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasOutputMatrixId()) {
          
          return false;
        }
        if (!hasFirstFactorMatrixId()) {
          
          return false;
        }
        if (!hasSecondFactorMatrixId()) {
          
          return false;
        }
        if (!hasOutputPiece()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!getOutputPiece().isInitialized()) {
          
          return false;
        }
        if (!getType().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              outputMatrixId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              firstFactorMatrixId_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              secondFactorMatrixId_ = input.readBytes();
              break;
            }
            case 34: {
              it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.Builder subBuilder = it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.newBuilder();
              if (hasOutputPiece()) {
                subBuilder.mergeFrom(getOutputPiece());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setOutputPiece(subBuilder.buildPartial());
              break;
            }
            case 42: {
              it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody.Builder subBuilder = it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody.newBuilder();
              if (hasType()) {
                subBuilder.mergeFrom(getType());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setType(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string outputMatrixId = 1;
      private java.lang.Object outputMatrixId_ = "";
      public boolean hasOutputMatrixId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getOutputMatrixId() {
        java.lang.Object ref = outputMatrixId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          outputMatrixId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setOutputMatrixId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        outputMatrixId_ = value;
        onChanged();
        return this;
      }
      public Builder clearOutputMatrixId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        outputMatrixId_ = getDefaultInstance().getOutputMatrixId();
        onChanged();
        return this;
      }
      void setOutputMatrixId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        outputMatrixId_ = value;
        onChanged();
      }
      
      // required string firstFactorMatrixId = 2;
      private java.lang.Object firstFactorMatrixId_ = "";
      public boolean hasFirstFactorMatrixId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getFirstFactorMatrixId() {
        java.lang.Object ref = firstFactorMatrixId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          firstFactorMatrixId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setFirstFactorMatrixId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        firstFactorMatrixId_ = value;
        onChanged();
        return this;
      }
      public Builder clearFirstFactorMatrixId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        firstFactorMatrixId_ = getDefaultInstance().getFirstFactorMatrixId();
        onChanged();
        return this;
      }
      void setFirstFactorMatrixId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        firstFactorMatrixId_ = value;
        onChanged();
      }
      
      // required string secondFactorMatrixId = 3;
      private java.lang.Object secondFactorMatrixId_ = "";
      public boolean hasSecondFactorMatrixId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getSecondFactorMatrixId() {
        java.lang.Object ref = secondFactorMatrixId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          secondFactorMatrixId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSecondFactorMatrixId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        secondFactorMatrixId_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecondFactorMatrixId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        secondFactorMatrixId_ = getDefaultInstance().getSecondFactorMatrixId();
        onChanged();
        return this;
      }
      void setSecondFactorMatrixId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        secondFactorMatrixId_ = value;
        onChanged();
      }
      
      // required .RectangleBody outputPiece = 4;
      private it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody outputPiece_ = it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody, it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.Builder, it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBodyOrBuilder> outputPieceBuilder_;
      public boolean hasOutputPiece() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody getOutputPiece() {
        if (outputPieceBuilder_ == null) {
          return outputPiece_;
        } else {
          return outputPieceBuilder_.getMessage();
        }
      }
      public Builder setOutputPiece(it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody value) {
        if (outputPieceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          outputPiece_ = value;
          onChanged();
        } else {
          outputPieceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setOutputPiece(
          it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.Builder builderForValue) {
        if (outputPieceBuilder_ == null) {
          outputPiece_ = builderForValue.build();
          onChanged();
        } else {
          outputPieceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeOutputPiece(it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody value) {
        if (outputPieceBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              outputPiece_ != it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.getDefaultInstance()) {
            outputPiece_ =
              it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.newBuilder(outputPiece_).mergeFrom(value).buildPartial();
          } else {
            outputPiece_ = value;
          }
          onChanged();
        } else {
          outputPieceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearOutputPiece() {
        if (outputPieceBuilder_ == null) {
          outputPiece_ = it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.getDefaultInstance();
          onChanged();
        } else {
          outputPieceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.Builder getOutputPieceBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getOutputPieceFieldBuilder().getBuilder();
      }
      public it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBodyOrBuilder getOutputPieceOrBuilder() {
        if (outputPieceBuilder_ != null) {
          return outputPieceBuilder_.getMessageOrBuilder();
        } else {
          return outputPiece_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody, it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.Builder, it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBodyOrBuilder> 
          getOutputPieceFieldBuilder() {
        if (outputPieceBuilder_ == null) {
          outputPieceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody, it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.Builder, it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBodyOrBuilder>(
                  outputPiece_,
                  getParentForChildren(),
                  isClean());
          outputPiece_ = null;
        }
        return outputPieceBuilder_;
      }
      
      // required .TypeBody type = 5;
      private it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody type_ = it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody, it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody.Builder, it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBodyOrBuilder> typeBuilder_;
      public boolean hasType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody getType() {
        if (typeBuilder_ == null) {
          return type_;
        } else {
          return typeBuilder_.getMessage();
        }
      }
      public Builder setType(it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          typeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setType(
          it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody.Builder builderForValue) {
        if (typeBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          typeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergeType(it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody value) {
        if (typeBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              type_ != it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody.getDefaultInstance()) {
            type_ =
              it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody.newBuilder(type_).mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          typeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearType() {
        if (typeBuilder_ == null) {
          type_ = it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody.getDefaultInstance();
          onChanged();
        } else {
          typeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      public it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody.Builder getTypeBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getTypeFieldBuilder().getBuilder();
      }
      public it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBodyOrBuilder getTypeOrBuilder() {
        if (typeBuilder_ != null) {
          return typeBuilder_.getMessageOrBuilder();
        } else {
          return type_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody, it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody.Builder, it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBodyOrBuilder> 
          getTypeFieldBuilder() {
        if (typeBuilder_ == null) {
          typeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody, it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBody.Builder, it.unipr.aotlab.dmat.core.generated.TypeWire.TypeBodyOrBuilder>(
                  type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        return typeBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:OrderMultiply)
    }
    
    static {
      defaultInstance = new OrderMultiply(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OrderMultiply)
  }
  
  public interface OrderMultiplyBodyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .MatrixPieceOwnerBody missingPieces = 1;
    java.util.List<it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody> 
        getMissingPiecesList();
    it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody getMissingPieces(int index);
    int getMissingPiecesCount();
    java.util.List<? extends it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBodyOrBuilder> 
        getMissingPiecesOrBuilderList();
    it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBodyOrBuilder getMissingPiecesOrBuilder(
        int index);
    
    // repeated .OrderMultiply operation = 2;
    java.util.List<it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply> 
        getOperationList();
    it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply getOperation(int index);
    int getOperationCount();
    java.util.List<? extends it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyOrBuilder> 
        getOperationOrBuilderList();
    it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyOrBuilder getOperationOrBuilder(
        int index);
  }
  public static final class OrderMultiplyBody extends
      com.google.protobuf.GeneratedMessage
      implements OrderMultiplyBodyOrBuilder {
    // Use OrderMultiplyBody.newBuilder() to construct.
    private OrderMultiplyBody(Builder builder) {
      super(builder);
    }
    private OrderMultiplyBody(boolean noInit) {}
    
    private static final OrderMultiplyBody defaultInstance;
    public static OrderMultiplyBody getDefaultInstance() {
      return defaultInstance;
    }
    
    public OrderMultiplyBody getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.internal_static_OrderMultiplyBody_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.internal_static_OrderMultiplyBody_fieldAccessorTable;
    }
    
    // repeated .MatrixPieceOwnerBody missingPieces = 1;
    public static final int MISSINGPIECES_FIELD_NUMBER = 1;
    private java.util.List<it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody> missingPieces_;
    public java.util.List<it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody> getMissingPiecesList() {
      return missingPieces_;
    }
    public java.util.List<? extends it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBodyOrBuilder> 
        getMissingPiecesOrBuilderList() {
      return missingPieces_;
    }
    public int getMissingPiecesCount() {
      return missingPieces_.size();
    }
    public it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody getMissingPieces(int index) {
      return missingPieces_.get(index);
    }
    public it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBodyOrBuilder getMissingPiecesOrBuilder(
        int index) {
      return missingPieces_.get(index);
    }
    
    // repeated .OrderMultiply operation = 2;
    public static final int OPERATION_FIELD_NUMBER = 2;
    private java.util.List<it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply> operation_;
    public java.util.List<it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply> getOperationList() {
      return operation_;
    }
    public java.util.List<? extends it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyOrBuilder> 
        getOperationOrBuilderList() {
      return operation_;
    }
    public int getOperationCount() {
      return operation_.size();
    }
    public it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply getOperation(int index) {
      return operation_.get(index);
    }
    public it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyOrBuilder getOperationOrBuilder(
        int index) {
      return operation_.get(index);
    }
    
    private void initFields() {
      missingPieces_ = java.util.Collections.emptyList();
      operation_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getMissingPiecesCount(); i++) {
        if (!getMissingPieces(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getOperationCount(); i++) {
        if (!getOperation(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < missingPieces_.size(); i++) {
        output.writeMessage(1, missingPieces_.get(i));
      }
      for (int i = 0; i < operation_.size(); i++) {
        output.writeMessage(2, operation_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < missingPieces_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, missingPieces_.get(i));
      }
      for (int i = 0; i < operation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, operation_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBodyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.internal_static_OrderMultiplyBody_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.internal_static_OrderMultiplyBody_fieldAccessorTable;
      }
      
      // Construct using it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMissingPiecesFieldBuilder();
          getOperationFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (missingPiecesBuilder_ == null) {
          missingPieces_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          missingPiecesBuilder_.clear();
        }
        if (operationBuilder_ == null) {
          operation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          operationBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody.getDescriptor();
      }
      
      public it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody getDefaultInstanceForType() {
        return it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody.getDefaultInstance();
      }
      
      public it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody build() {
        it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody buildPartial() {
        it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody result = new it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody(this);
        int from_bitField0_ = bitField0_;
        if (missingPiecesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            missingPieces_ = java.util.Collections.unmodifiableList(missingPieces_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.missingPieces_ = missingPieces_;
        } else {
          result.missingPieces_ = missingPiecesBuilder_.build();
        }
        if (operationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            operation_ = java.util.Collections.unmodifiableList(operation_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.operation_ = operation_;
        } else {
          result.operation_ = operationBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody) {
          return mergeFrom((it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody other) {
        if (other == it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody.getDefaultInstance()) return this;
        if (missingPiecesBuilder_ == null) {
          if (!other.missingPieces_.isEmpty()) {
            if (missingPieces_.isEmpty()) {
              missingPieces_ = other.missingPieces_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMissingPiecesIsMutable();
              missingPieces_.addAll(other.missingPieces_);
            }
            onChanged();
          }
        } else {
          if (!other.missingPieces_.isEmpty()) {
            if (missingPiecesBuilder_.isEmpty()) {
              missingPiecesBuilder_.dispose();
              missingPiecesBuilder_ = null;
              missingPieces_ = other.missingPieces_;
              bitField0_ = (bitField0_ & ~0x00000001);
              missingPiecesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMissingPiecesFieldBuilder() : null;
            } else {
              missingPiecesBuilder_.addAllMessages(other.missingPieces_);
            }
          }
        }
        if (operationBuilder_ == null) {
          if (!other.operation_.isEmpty()) {
            if (operation_.isEmpty()) {
              operation_ = other.operation_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureOperationIsMutable();
              operation_.addAll(other.operation_);
            }
            onChanged();
          }
        } else {
          if (!other.operation_.isEmpty()) {
            if (operationBuilder_.isEmpty()) {
              operationBuilder_.dispose();
              operationBuilder_ = null;
              operation_ = other.operation_;
              bitField0_ = (bitField0_ & ~0x00000002);
              operationBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOperationFieldBuilder() : null;
            } else {
              operationBuilder_.addAllMessages(other.operation_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getMissingPiecesCount(); i++) {
          if (!getMissingPieces(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getOperationCount(); i++) {
          if (!getOperation(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody.Builder subBuilder = it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMissingPieces(subBuilder.buildPartial());
              break;
            }
            case 18: {
              it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply.Builder subBuilder = it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addOperation(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .MatrixPieceOwnerBody missingPieces = 1;
      private java.util.List<it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody> missingPieces_ =
        java.util.Collections.emptyList();
      private void ensureMissingPiecesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          missingPieces_ = new java.util.ArrayList<it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody>(missingPieces_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody, it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody.Builder, it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBodyOrBuilder> missingPiecesBuilder_;
      
      public java.util.List<it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody> getMissingPiecesList() {
        if (missingPiecesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(missingPieces_);
        } else {
          return missingPiecesBuilder_.getMessageList();
        }
      }
      public int getMissingPiecesCount() {
        if (missingPiecesBuilder_ == null) {
          return missingPieces_.size();
        } else {
          return missingPiecesBuilder_.getCount();
        }
      }
      public it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody getMissingPieces(int index) {
        if (missingPiecesBuilder_ == null) {
          return missingPieces_.get(index);
        } else {
          return missingPiecesBuilder_.getMessage(index);
        }
      }
      public Builder setMissingPieces(
          int index, it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody value) {
        if (missingPiecesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMissingPiecesIsMutable();
          missingPieces_.set(index, value);
          onChanged();
        } else {
          missingPiecesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setMissingPieces(
          int index, it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody.Builder builderForValue) {
        if (missingPiecesBuilder_ == null) {
          ensureMissingPiecesIsMutable();
          missingPieces_.set(index, builderForValue.build());
          onChanged();
        } else {
          missingPiecesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addMissingPieces(it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody value) {
        if (missingPiecesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMissingPiecesIsMutable();
          missingPieces_.add(value);
          onChanged();
        } else {
          missingPiecesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addMissingPieces(
          int index, it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody value) {
        if (missingPiecesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMissingPiecesIsMutable();
          missingPieces_.add(index, value);
          onChanged();
        } else {
          missingPiecesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addMissingPieces(
          it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody.Builder builderForValue) {
        if (missingPiecesBuilder_ == null) {
          ensureMissingPiecesIsMutable();
          missingPieces_.add(builderForValue.build());
          onChanged();
        } else {
          missingPiecesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addMissingPieces(
          int index, it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody.Builder builderForValue) {
        if (missingPiecesBuilder_ == null) {
          ensureMissingPiecesIsMutable();
          missingPieces_.add(index, builderForValue.build());
          onChanged();
        } else {
          missingPiecesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllMissingPieces(
          java.lang.Iterable<? extends it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody> values) {
        if (missingPiecesBuilder_ == null) {
          ensureMissingPiecesIsMutable();
          super.addAll(values, missingPieces_);
          onChanged();
        } else {
          missingPiecesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearMissingPieces() {
        if (missingPiecesBuilder_ == null) {
          missingPieces_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          missingPiecesBuilder_.clear();
        }
        return this;
      }
      public Builder removeMissingPieces(int index) {
        if (missingPiecesBuilder_ == null) {
          ensureMissingPiecesIsMutable();
          missingPieces_.remove(index);
          onChanged();
        } else {
          missingPiecesBuilder_.remove(index);
        }
        return this;
      }
      public it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody.Builder getMissingPiecesBuilder(
          int index) {
        return getMissingPiecesFieldBuilder().getBuilder(index);
      }
      public it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBodyOrBuilder getMissingPiecesOrBuilder(
          int index) {
        if (missingPiecesBuilder_ == null) {
          return missingPieces_.get(index);  } else {
          return missingPiecesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBodyOrBuilder> 
           getMissingPiecesOrBuilderList() {
        if (missingPiecesBuilder_ != null) {
          return missingPiecesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(missingPieces_);
        }
      }
      public it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody.Builder addMissingPiecesBuilder() {
        return getMissingPiecesFieldBuilder().addBuilder(
            it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody.getDefaultInstance());
      }
      public it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody.Builder addMissingPiecesBuilder(
          int index) {
        return getMissingPiecesFieldBuilder().addBuilder(
            index, it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody.getDefaultInstance());
      }
      public java.util.List<it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody.Builder> 
           getMissingPiecesBuilderList() {
        return getMissingPiecesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody, it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody.Builder, it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBodyOrBuilder> 
          getMissingPiecesFieldBuilder() {
        if (missingPiecesBuilder_ == null) {
          missingPiecesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody, it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody.Builder, it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBodyOrBuilder>(
                  missingPieces_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          missingPieces_ = null;
        }
        return missingPiecesBuilder_;
      }
      
      // repeated .OrderMultiply operation = 2;
      private java.util.List<it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply> operation_ =
        java.util.Collections.emptyList();
      private void ensureOperationIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          operation_ = new java.util.ArrayList<it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply>(operation_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply, it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply.Builder, it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyOrBuilder> operationBuilder_;
      
      public java.util.List<it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply> getOperationList() {
        if (operationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(operation_);
        } else {
          return operationBuilder_.getMessageList();
        }
      }
      public int getOperationCount() {
        if (operationBuilder_ == null) {
          return operation_.size();
        } else {
          return operationBuilder_.getCount();
        }
      }
      public it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply getOperation(int index) {
        if (operationBuilder_ == null) {
          return operation_.get(index);
        } else {
          return operationBuilder_.getMessage(index);
        }
      }
      public Builder setOperation(
          int index, it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply value) {
        if (operationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperationIsMutable();
          operation_.set(index, value);
          onChanged();
        } else {
          operationBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setOperation(
          int index, it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply.Builder builderForValue) {
        if (operationBuilder_ == null) {
          ensureOperationIsMutable();
          operation_.set(index, builderForValue.build());
          onChanged();
        } else {
          operationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addOperation(it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply value) {
        if (operationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperationIsMutable();
          operation_.add(value);
          onChanged();
        } else {
          operationBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addOperation(
          int index, it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply value) {
        if (operationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperationIsMutable();
          operation_.add(index, value);
          onChanged();
        } else {
          operationBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addOperation(
          it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply.Builder builderForValue) {
        if (operationBuilder_ == null) {
          ensureOperationIsMutable();
          operation_.add(builderForValue.build());
          onChanged();
        } else {
          operationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addOperation(
          int index, it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply.Builder builderForValue) {
        if (operationBuilder_ == null) {
          ensureOperationIsMutable();
          operation_.add(index, builderForValue.build());
          onChanged();
        } else {
          operationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllOperation(
          java.lang.Iterable<? extends it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply> values) {
        if (operationBuilder_ == null) {
          ensureOperationIsMutable();
          super.addAll(values, operation_);
          onChanged();
        } else {
          operationBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearOperation() {
        if (operationBuilder_ == null) {
          operation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          operationBuilder_.clear();
        }
        return this;
      }
      public Builder removeOperation(int index) {
        if (operationBuilder_ == null) {
          ensureOperationIsMutable();
          operation_.remove(index);
          onChanged();
        } else {
          operationBuilder_.remove(index);
        }
        return this;
      }
      public it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply.Builder getOperationBuilder(
          int index) {
        return getOperationFieldBuilder().getBuilder(index);
      }
      public it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyOrBuilder getOperationOrBuilder(
          int index) {
        if (operationBuilder_ == null) {
          return operation_.get(index);  } else {
          return operationBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyOrBuilder> 
           getOperationOrBuilderList() {
        if (operationBuilder_ != null) {
          return operationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(operation_);
        }
      }
      public it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply.Builder addOperationBuilder() {
        return getOperationFieldBuilder().addBuilder(
            it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply.getDefaultInstance());
      }
      public it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply.Builder addOperationBuilder(
          int index) {
        return getOperationFieldBuilder().addBuilder(
            index, it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply.getDefaultInstance());
      }
      public java.util.List<it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply.Builder> 
           getOperationBuilderList() {
        return getOperationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply, it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply.Builder, it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyOrBuilder> 
          getOperationFieldBuilder() {
        if (operationBuilder_ == null) {
          operationBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply, it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply.Builder, it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyOrBuilder>(
                  operation_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          operation_ = null;
        }
        return operationBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:OrderMultiplyBody)
    }
    
    static {
      defaultInstance = new OrderMultiplyBody(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OrderMultiplyBody)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OrderMultiply_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OrderMultiply_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OrderMultiplyBody_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OrderMultiplyBody_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n>home/paolo/uni/dissertation/dmat/proto" +
      "/OrderMultiplyWire.proto\032\023RectangleWire." +
      "proto\032\032MatrixPieceOwnerWire.proto\032\016TypeW" +
      "ire.proto\"\240\001\n\rOrderMultiply\022\026\n\016outputMat" +
      "rixId\030\001 \002(\t\022\033\n\023firstFactorMatrixId\030\002 \002(\t" +
      "\022\034\n\024secondFactorMatrixId\030\003 \002(\t\022#\n\013output" +
      "Piece\030\004 \002(\0132\016.RectangleBody\022\027\n\004type\030\005 \002(" +
      "\0132\t.TypeBody\"d\n\021OrderMultiplyBody\022,\n\rmis" +
      "singPieces\030\001 \003(\0132\025.MatrixPieceOwnerBody\022" +
      "!\n\toperation\030\002 \003(\0132\016.OrderMultiplyB%\n#it",
      ".unipr.aotlab.dmat.core.generated"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_OrderMultiply_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_OrderMultiply_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OrderMultiply_descriptor,
              new java.lang.String[] { "OutputMatrixId", "FirstFactorMatrixId", "SecondFactorMatrixId", "OutputPiece", "Type", },
              it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply.class,
              it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiply.Builder.class);
          internal_static_OrderMultiplyBody_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_OrderMultiplyBody_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OrderMultiplyBody_descriptor,
              new java.lang.String[] { "MissingPieces", "Operation", },
              it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody.class,
              it.unipr.aotlab.dmat.core.generated.OrderMultiplyWire.OrderMultiplyBody.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          it.unipr.aotlab.dmat.core.generated.RectangleWire.getDescriptor(),
          it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.getDescriptor(),
          it.unipr.aotlab.dmat.core.generated.TypeWire.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
