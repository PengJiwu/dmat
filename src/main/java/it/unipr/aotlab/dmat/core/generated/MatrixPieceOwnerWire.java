// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: home/paolo/uni/dissertation/dmat/proto/MatrixPieceOwnerWire.proto

package it.unipr.aotlab.dmat.core.generated;

public final class MatrixPieceOwnerWire {
  private MatrixPieceOwnerWire() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MatrixPieceOwnerBodyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated string matrixId = 1;
    java.util.List<String> getMatrixIdList();
    int getMatrixIdCount();
    String getMatrixId(int index);
    
    // repeated string chunkId = 2;
    java.util.List<String> getChunkIdList();
    int getChunkIdCount();
    String getChunkId(int index);
    
    // required .RectangleBody piece = 3;
    boolean hasPiece();
    it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody getPiece();
    it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBodyOrBuilder getPieceOrBuilder();
    
    // required string ownerNodeId = 4;
    boolean hasOwnerNodeId();
    String getOwnerNodeId();
  }
  public static final class MatrixPieceOwnerBody extends
      com.google.protobuf.GeneratedMessage
      implements MatrixPieceOwnerBodyOrBuilder {
    // Use MatrixPieceOwnerBody.newBuilder() to construct.
    private MatrixPieceOwnerBody(Builder builder) {
      super(builder);
    }
    private MatrixPieceOwnerBody(boolean noInit) {}
    
    private static final MatrixPieceOwnerBody defaultInstance;
    public static MatrixPieceOwnerBody getDefaultInstance() {
      return defaultInstance;
    }
    
    public MatrixPieceOwnerBody getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.internal_static_MatrixPieceOwnerBody_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.internal_static_MatrixPieceOwnerBody_fieldAccessorTable;
    }
    
    private int bitField0_;
    // repeated string matrixId = 1;
    public static final int MATRIXID_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList matrixId_;
    public java.util.List<String>
        getMatrixIdList() {
      return matrixId_;
    }
    public int getMatrixIdCount() {
      return matrixId_.size();
    }
    public String getMatrixId(int index) {
      return matrixId_.get(index);
    }
    
    // repeated string chunkId = 2;
    public static final int CHUNKID_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList chunkId_;
    public java.util.List<String>
        getChunkIdList() {
      return chunkId_;
    }
    public int getChunkIdCount() {
      return chunkId_.size();
    }
    public String getChunkId(int index) {
      return chunkId_.get(index);
    }
    
    // required .RectangleBody piece = 3;
    public static final int PIECE_FIELD_NUMBER = 3;
    private it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody piece_;
    public boolean hasPiece() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody getPiece() {
      return piece_;
    }
    public it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBodyOrBuilder getPieceOrBuilder() {
      return piece_;
    }
    
    // required string ownerNodeId = 4;
    public static final int OWNERNODEID_FIELD_NUMBER = 4;
    private java.lang.Object ownerNodeId_;
    public boolean hasOwnerNodeId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getOwnerNodeId() {
      java.lang.Object ref = ownerNodeId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          ownerNodeId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getOwnerNodeIdBytes() {
      java.lang.Object ref = ownerNodeId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        ownerNodeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      matrixId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      chunkId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      piece_ = it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.getDefaultInstance();
      ownerNodeId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasPiece()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOwnerNodeId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPiece().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < matrixId_.size(); i++) {
        output.writeBytes(1, matrixId_.getByteString(i));
      }
      for (int i = 0; i < chunkId_.size(); i++) {
        output.writeBytes(2, chunkId_.getByteString(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(3, piece_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(4, getOwnerNodeIdBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < matrixId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(matrixId_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getMatrixIdList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < chunkId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(chunkId_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getChunkIdList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, piece_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getOwnerNodeIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBodyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.internal_static_MatrixPieceOwnerBody_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.internal_static_MatrixPieceOwnerBody_fieldAccessorTable;
      }
      
      // Construct using it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPieceFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        matrixId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        chunkId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (pieceBuilder_ == null) {
          piece_ = it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.getDefaultInstance();
        } else {
          pieceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        ownerNodeId_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody.getDescriptor();
      }
      
      public it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody getDefaultInstanceForType() {
        return it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody.getDefaultInstance();
      }
      
      public it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody build() {
        it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody buildPartial() {
        it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody result = new it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          matrixId_ = new com.google.protobuf.UnmodifiableLazyStringList(
              matrixId_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.matrixId_ = matrixId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          chunkId_ = new com.google.protobuf.UnmodifiableLazyStringList(
              chunkId_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.chunkId_ = chunkId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000001;
        }
        if (pieceBuilder_ == null) {
          result.piece_ = piece_;
        } else {
          result.piece_ = pieceBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ownerNodeId_ = ownerNodeId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody) {
          return mergeFrom((it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody other) {
        if (other == it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody.getDefaultInstance()) return this;
        if (!other.matrixId_.isEmpty()) {
          if (matrixId_.isEmpty()) {
            matrixId_ = other.matrixId_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureMatrixIdIsMutable();
            matrixId_.addAll(other.matrixId_);
          }
          onChanged();
        }
        if (!other.chunkId_.isEmpty()) {
          if (chunkId_.isEmpty()) {
            chunkId_ = other.chunkId_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureChunkIdIsMutable();
            chunkId_.addAll(other.chunkId_);
          }
          onChanged();
        }
        if (other.hasPiece()) {
          mergePiece(other.getPiece());
        }
        if (other.hasOwnerNodeId()) {
          setOwnerNodeId(other.getOwnerNodeId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasPiece()) {
          
          return false;
        }
        if (!hasOwnerNodeId()) {
          
          return false;
        }
        if (!getPiece().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              ensureMatrixIdIsMutable();
              matrixId_.add(input.readBytes());
              break;
            }
            case 18: {
              ensureChunkIdIsMutable();
              chunkId_.add(input.readBytes());
              break;
            }
            case 26: {
              it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.Builder subBuilder = it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.newBuilder();
              if (hasPiece()) {
                subBuilder.mergeFrom(getPiece());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPiece(subBuilder.buildPartial());
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              ownerNodeId_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated string matrixId = 1;
      private com.google.protobuf.LazyStringList matrixId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureMatrixIdIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          matrixId_ = new com.google.protobuf.LazyStringArrayList(matrixId_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<String>
          getMatrixIdList() {
        return java.util.Collections.unmodifiableList(matrixId_);
      }
      public int getMatrixIdCount() {
        return matrixId_.size();
      }
      public String getMatrixId(int index) {
        return matrixId_.get(index);
      }
      public Builder setMatrixId(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMatrixIdIsMutable();
        matrixId_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addMatrixId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMatrixIdIsMutable();
        matrixId_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllMatrixId(
          java.lang.Iterable<String> values) {
        ensureMatrixIdIsMutable();
        super.addAll(values, matrixId_);
        onChanged();
        return this;
      }
      public Builder clearMatrixId() {
        matrixId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      void addMatrixId(com.google.protobuf.ByteString value) {
        ensureMatrixIdIsMutable();
        matrixId_.add(value);
        onChanged();
      }
      
      // repeated string chunkId = 2;
      private com.google.protobuf.LazyStringList chunkId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureChunkIdIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          chunkId_ = new com.google.protobuf.LazyStringArrayList(chunkId_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<String>
          getChunkIdList() {
        return java.util.Collections.unmodifiableList(chunkId_);
      }
      public int getChunkIdCount() {
        return chunkId_.size();
      }
      public String getChunkId(int index) {
        return chunkId_.get(index);
      }
      public Builder setChunkId(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureChunkIdIsMutable();
        chunkId_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addChunkId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureChunkIdIsMutable();
        chunkId_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllChunkId(
          java.lang.Iterable<String> values) {
        ensureChunkIdIsMutable();
        super.addAll(values, chunkId_);
        onChanged();
        return this;
      }
      public Builder clearChunkId() {
        chunkId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      void addChunkId(com.google.protobuf.ByteString value) {
        ensureChunkIdIsMutable();
        chunkId_.add(value);
        onChanged();
      }
      
      // required .RectangleBody piece = 3;
      private it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody piece_ = it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody, it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.Builder, it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBodyOrBuilder> pieceBuilder_;
      public boolean hasPiece() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody getPiece() {
        if (pieceBuilder_ == null) {
          return piece_;
        } else {
          return pieceBuilder_.getMessage();
        }
      }
      public Builder setPiece(it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody value) {
        if (pieceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          piece_ = value;
          onChanged();
        } else {
          pieceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setPiece(
          it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.Builder builderForValue) {
        if (pieceBuilder_ == null) {
          piece_ = builderForValue.build();
          onChanged();
        } else {
          pieceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergePiece(it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody value) {
        if (pieceBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              piece_ != it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.getDefaultInstance()) {
            piece_ =
              it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.newBuilder(piece_).mergeFrom(value).buildPartial();
          } else {
            piece_ = value;
          }
          onChanged();
        } else {
          pieceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearPiece() {
        if (pieceBuilder_ == null) {
          piece_ = it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.getDefaultInstance();
          onChanged();
        } else {
          pieceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.Builder getPieceBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getPieceFieldBuilder().getBuilder();
      }
      public it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBodyOrBuilder getPieceOrBuilder() {
        if (pieceBuilder_ != null) {
          return pieceBuilder_.getMessageOrBuilder();
        } else {
          return piece_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody, it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.Builder, it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBodyOrBuilder> 
          getPieceFieldBuilder() {
        if (pieceBuilder_ == null) {
          pieceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody, it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBody.Builder, it.unipr.aotlab.dmat.core.generated.RectangleWire.RectangleBodyOrBuilder>(
                  piece_,
                  getParentForChildren(),
                  isClean());
          piece_ = null;
        }
        return pieceBuilder_;
      }
      
      // required string ownerNodeId = 4;
      private java.lang.Object ownerNodeId_ = "";
      public boolean hasOwnerNodeId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getOwnerNodeId() {
        java.lang.Object ref = ownerNodeId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          ownerNodeId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setOwnerNodeId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        ownerNodeId_ = value;
        onChanged();
        return this;
      }
      public Builder clearOwnerNodeId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ownerNodeId_ = getDefaultInstance().getOwnerNodeId();
        onChanged();
        return this;
      }
      void setOwnerNodeId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        ownerNodeId_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:MatrixPieceOwnerBody)
    }
    
    static {
      defaultInstance = new MatrixPieceOwnerBody(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MatrixPieceOwnerBody)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MatrixPieceOwnerBody_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MatrixPieceOwnerBody_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nAhome/paolo/uni/dissertation/dmat/proto" +
      "/MatrixPieceOwnerWire.proto\032\023RectangleWi" +
      "re.proto\"m\n\024MatrixPieceOwnerBody\022\020\n\010matr" +
      "ixId\030\001 \003(\t\022\017\n\007chunkId\030\002 \003(\t\022\035\n\005piece\030\003 \002" +
      "(\0132\016.RectangleBody\022\023\n\013ownerNodeId\030\004 \002(\tB" +
      "%\n#it.unipr.aotlab.dmat.core.generated"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_MatrixPieceOwnerBody_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_MatrixPieceOwnerBody_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MatrixPieceOwnerBody_descriptor,
              new java.lang.String[] { "MatrixId", "ChunkId", "Piece", "OwnerNodeId", },
              it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody.class,
              it.unipr.aotlab.dmat.core.generated.MatrixPieceOwnerWire.MatrixPieceOwnerBody.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          it.unipr.aotlab.dmat.core.generated.RectangleWire.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
